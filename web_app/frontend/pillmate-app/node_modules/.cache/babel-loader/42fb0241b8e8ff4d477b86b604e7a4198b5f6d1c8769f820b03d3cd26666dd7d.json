{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\pillmate_\\\\web_app\\\\frontend\\\\pillmate-app\\\\src\\\\layouts\\\\login\\\\login.tsx\",\n  _s = $RefreshSig$();\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const auth = getAuth();\n  const history = useHistory();\n  const signInWithEmail_Password = async (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      if (userCredential.user) {\n        history.push(\"/generateQRCode\");\n      }\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorMessage);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","useHistory","jsxDEV","_jsxDEV","Login","_s","auth","history","signInWithEmail_Password","email","password","then","userCredential","user","push","catch","error","errorCode","code","errorMessage","message","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/pillmate_/web_app/frontend/pillmate-app/src/layouts/login/login.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n    const auth = getAuth();\r\n    const history = useHistory();\r\n\r\n    const signInWithEmail_Password = async (email: string, password: string) => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                if(userCredential.user){\r\n                    history.push(\"/generateQRCode\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n                console.log(errorMessage);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}"],"mappings":";;AACA,SAASA,OAAO,EAAEC,0BAA0B,QAAQ,eAAe;AACnE,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGP,OAAO,CAAC,CAAC;EACtB,MAAMQ,OAAO,GAAGN,UAAU,CAAC,CAAC;EAE5B,MAAMO,wBAAwB,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IACxEV,0BAA0B,CAACM,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC,CAC5CC,IAAI,CAAEC,cAAc,IAAK;MACtB,IAAGA,cAAc,CAACC,IAAI,EAAC;QACnBN,OAAO,CAACO,IAAI,CAAC,iBAAiB,CAAC;MACnC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACd,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;IAC7B,CAAC,CAAC;EACV,CAAC;EAED,oBACIhB,OAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAAArB,EAAA,CAvBYD,KAAK;EAAA,QAEEH,UAAU;AAAA;AAAA0B,EAAA,GAFjBvB,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}