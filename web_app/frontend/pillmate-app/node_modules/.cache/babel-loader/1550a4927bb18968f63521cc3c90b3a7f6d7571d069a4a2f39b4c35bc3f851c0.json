{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\pillmate_\\\\web_app\\\\frontend\\\\pillmate-app\\\\src\\\\layouts\\\\login\\\\login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n  const auth = getAuth();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Send the email and password to firebase\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      if (userCredential) {\n        history.push(\"/generateQRCode\");\n      }\n    } catch (error) {\n      console.log('User Sign In Failed', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100vw'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"h5asp1ol85TtIONqAzWRcJUvY/M=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","getAuth","signInWithEmailAndPassword","useHistory","jsxDEV","_jsxDEV","Login","_s","auth","history","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","userCredential","push","error","console","log","message","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/pillmate_/web_app/frontend/pillmate-app/src/layouts/login/login.tsx"],"sourcesContent":["import { FormEvent, useEffect, useState } from 'react';\r\nimport { getAuth, signInWithEmailAndPassword} from 'firebase/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = () => {\r\n    const auth = getAuth();\r\n    const history = useHistory();\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n\r\n    const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n  \r\n        try {\r\n          // Send the email and password to firebase\r\n          const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n  \r\n          if (userCredential) {\r\n            history.push(\"/generateQRCode\")\r\n          }\r\n        } catch (error:any) {\r\n          console.log('User Sign In Failed', error.message);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div style={{height:'100vh', width: '100vw'}}>\r\n            \r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAA+BA,QAAQ,QAAQ,OAAO;AACtD,SAASC,OAAO,EAAEC,0BAA0B,QAAO,eAAe;AAClE,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGP,OAAO,CAAC,CAAC;EACtB,MAAMQ,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAM,CAAEO,KAAK,EAAEC,QAAQ,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAEY,QAAQ,EAAEC,WAAW,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMc,YAAY,GAAG,MAAOC,KAAiC,IAAK;IAC9DA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF;MACA,MAAMC,cAAc,GAAG,MAAMf,0BAA0B,CAACM,IAAI,EAAEE,KAAK,EAAEE,QAAQ,CAAC;MAE9E,IAAIK,cAAc,EAAE;QAClBR,OAAO,CAACS,IAAI,CAAC,iBAAiB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAS,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACnD;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAKkB,KAAK,EAAE;MAACC,MAAM,EAAC,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExC,CAAC;AAEd,CAAC;AAAAtB,EAAA,CA1BYD,KAAK;EAAA,QAEEH,UAAU;AAAA;AAAA2B,EAAA,GAFjBxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}